buildscript {
    ext {
        corda_release_group = 'net.corda'
        corda_release_version = '4.0'
        corda_gradle_plugins_version = '4.0.42'
        kotlin_version = '1.2.71'
        junit_version = '4.12'
        quasar_version = '0.7.10'
        spring_boot_version = '2.0.2.RELEASE'
        spring_boot_gradle_plugin_version = '2.0.2.RELEASE'
        slf4j_version = '1.7.25'
        log4j_version = '2.11.2'
        corda_platform_version = '4'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }    
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_gradle_plugin_version"
    }
}

allprojects {
    apply plugin: 'kotlin'

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true   // Useful for reflection.
        }
    }

    jar {
        // This makes the JAR's SHA-256 hash repeatable.
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }
}

apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

dependencies {
    // Corda dependencies.
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    cordapp "com.example.iou:IOUContract:1.0.0"

    cordapp "com.charlie.iou.flows:charlie_iou:1.0.0"
    cordapp "com.alice.iou.flows:alice_iou:1.0.0"
    cordapp "com.bob.iou.flows:bob_iou:1.0.0"

    cordapp "com.alice.iou.flows:alice_iou-api:1.0.0"
    cordapp "com.charlie.iou.flows:charlie_iou-api:1.0.0"

    cordapp "com.tibco.dovetail:dovetail-corda:0.1.4"

    cordapp "net.corda:corda-finance-contracts:$corda_release_version"
    cordapp "net.corda:corda-finance-workflows:$corda_release_version"
}

cordapp {
    info {
        name "CorDapp IOU"
        vendor "Corda Open Source"
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
    }
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    directory "./build/nodes"

    nodeDefaults {
        projectCordapp {
            deploy = false
        }
      
        cordapp "com.example.iou:IOUContract:1.0.0"

        cordapp "com.tibco.dovetail:dovetail-corda:0.1.4"
        cordapp "net.corda:corda-finance-contracts:$corda_release_version"
        cordapp "net.corda:corda-finance-workflows:$corda_release_version"
    }
    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating : false]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
    }
    node {
        name "O=charlie,L=New York,C=US"
        cordapp "com.charlie.iou.flows:charlie_iou:1.0.0"
        cordapp "com.alice.iou.flows:alice_iou-api:1.0.0"
        p2pPort 10005
        rpcSettings {
            address("localhost:10006")
            adminAddress("localhost:10046")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=alice,L=New York,C=US"
        cordapp "com.alice.iou.flows:alice_iou:1.0.0"
        cordapp "com.charlie.iou.flows:charlie_iou-api:1.0.0"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10049")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=bob,L=New York,C=US"
        cordapp "com.bob.iou.flows:bob_iou:1.0.0"
        cordapp "com.alice.iou.flows:alice_iou-api:1.0.0"
        cordapp "com.charlie.iou.flows:charlie_iou-api:1.0.0"
        p2pPort 10010
        rpcSettings {
            address("localhost:10011")
            adminAddress("localhost:10052")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=bank,L=New York,C=US"
        p2pPort 10015
        rpcSettings {
            address("localhost:10017")
            adminAddress("localhost:10055")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=regulator,L=New York,C=US"
        p2pPort 10020
        rpcSettings {
            address("localhost:10021")
            adminAddress("localhost:10058")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
}
